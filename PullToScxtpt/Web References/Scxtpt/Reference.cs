//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace PullToScxtpt.Scxtpt {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using PullToScxtpt.Helper;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="YinHaiBusinessSoapBinding", Namespace="http://webservice.common.yinhai.com/")]
    public partial class YinHaiBusiness : System.Web.Services.Protocols.SoapHttpClientProtocol {
        public RequestSOAPHeader RequestSOAPHeader;
        private System.Threading.SendOrPostCallback callBusinessGzipOperationCompleted;
        
        private System.Threading.SendOrPostCallback getJylshOperationCompleted;
        
        private System.Threading.SendOrPostCallback callBusinessOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelBusinessOperationCompleted;
        
        private System.Threading.SendOrPostCallback confirmBusinessOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public YinHaiBusiness(RequestSOAPHeader RequestSOAPHeader) {
            this.RequestSOAPHeader = RequestSOAPHeader;
            this.Url = global::PullToScxtpt.Properties.Settings.Default.PullToScxtpt_Scxtpt_YinHaiBusiness;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event callBusinessGzipCompletedEventHandler callBusinessGzipCompleted;
        
        /// <remarks/>
        public event getJylshCompletedEventHandler getJylshCompleted;
        
        /// <remarks/>
        public event callBusinessCompletedEventHandler callBusinessCompleted;
        
        /// <remarks/>
        public event cancelBusinessCompletedEventHandler cancelBusinessCompleted;
        
        /// <remarks/>
        public event confirmBusinessCompletedEventHandler confirmBusinessCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.common.yinhai.com/", ResponseNamespace="http://webservice.common.yinhai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)]
        public byte[] callBusinessGzip([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary", IsNullable=true)] byte[] inputByte) {
            object[] results = this.Invoke("callBusinessGzip", new object[] {
                        inputByte});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void callBusinessGzipAsync(byte[] inputByte) {
            this.callBusinessGzipAsync(inputByte, null);
        }
        
        /// <remarks/>
        public void callBusinessGzipAsync(byte[] inputByte, object userState) {
            if ((this.callBusinessGzipOperationCompleted == null)) {
                this.callBusinessGzipOperationCompleted = new System.Threading.SendOrPostCallback(this.OncallBusinessGzipOperationCompleted);
            }
            this.InvokeAsync("callBusinessGzip", new object[] {
                        inputByte}, this.callBusinessGzipOperationCompleted, userState);
        }
        
        private void OncallBusinessGzipOperationCompleted(object arg) {
            if ((this.callBusinessGzipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.callBusinessGzipCompleted(this, new callBusinessGzipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.common.yinhai.com/", ResponseNamespace="http://webservice.common.yinhai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getJylsh([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string inputxml) {
            object[] results = this.Invoke("getJylsh", new object[] {
                        inputxml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getJylshAsync(string inputxml) {
            this.getJylshAsync(inputxml, null);
        }
        
        /// <remarks/>
        public void getJylshAsync(string inputxml, object userState) {
            if ((this.getJylshOperationCompleted == null)) {
                this.getJylshOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetJylshOperationCompleted);
            }
            this.InvokeAsync("getJylsh", new object[] {
                        inputxml}, this.getJylshOperationCompleted, userState);
        }
        
        private void OngetJylshOperationCompleted(object arg) {
            if ((this.getJylshCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getJylshCompleted(this, new getJylshCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.common.yinhai.com/", ResponseNamespace="http://webservice.common.yinhai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [SoapHeader("RequestSOAPHeader")]
        public string callBusiness([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string inputxml) {
            object[] results = this.Invoke("callBusiness", new object[] {
                        inputxml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void callBusinessAsync(string inputxml) {
            this.callBusinessAsync(inputxml, null);
        }
        
        /// <remarks/>
        public void callBusinessAsync(string inputxml, object userState) {
            if ((this.callBusinessOperationCompleted == null)) {
                this.callBusinessOperationCompleted = new System.Threading.SendOrPostCallback(this.OncallBusinessOperationCompleted);
            }
            this.InvokeAsync("callBusiness", new object[] {
                        inputxml}, this.callBusinessOperationCompleted, userState);
        }
        
        private void OncallBusinessOperationCompleted(object arg) {
            if ((this.callBusinessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.callBusinessCompleted(this, new callBusinessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.common.yinhai.com/", ResponseNamespace="http://webservice.common.yinhai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string cancelBusiness() {
            object[] results = this.Invoke("cancelBusiness", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void cancelBusinessAsync() {
            this.cancelBusinessAsync(null);
        }
        
        /// <remarks/>
        public void cancelBusinessAsync(object userState) {
            if ((this.cancelBusinessOperationCompleted == null)) {
                this.cancelBusinessOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelBusinessOperationCompleted);
            }
            this.InvokeAsync("cancelBusiness", new object[0], this.cancelBusinessOperationCompleted, userState);
        }
        
        private void OncancelBusinessOperationCompleted(object arg) {
            if ((this.cancelBusinessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelBusinessCompleted(this, new cancelBusinessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.common.yinhai.com/", ResponseNamespace="http://webservice.common.yinhai.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string confirmBusiness() {
            object[] results = this.Invoke("confirmBusiness", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void confirmBusinessAsync() {
            this.confirmBusinessAsync(null);
        }
        
        /// <remarks/>
        public void confirmBusinessAsync(object userState) {
            if ((this.confirmBusinessOperationCompleted == null)) {
                this.confirmBusinessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconfirmBusinessOperationCompleted);
            }
            this.InvokeAsync("confirmBusiness", new object[0], this.confirmBusinessOperationCompleted, userState);
        }
        
        private void OnconfirmBusinessOperationCompleted(object arg) {
            if ((this.confirmBusinessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.confirmBusinessCompleted(this, new confirmBusinessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void callBusinessGzipCompletedEventHandler(object sender, callBusinessGzipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class callBusinessGzipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal callBusinessGzipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getJylshCompletedEventHandler(object sender, getJylshCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getJylshCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getJylshCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void callBusinessCompletedEventHandler(object sender, callBusinessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class callBusinessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal callBusinessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void cancelBusinessCompletedEventHandler(object sender, cancelBusinessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelBusinessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelBusinessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void confirmBusinessCompletedEventHandler(object sender, confirmBusinessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class confirmBusinessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal confirmBusinessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591